/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hms.view;

import hms.controller.AdmissionController;
import hms.controller.TestController;
import hms.controller.TestResultController;
import hms.model.Admission;
import hms.model.Test;
import hms.model.TestResult;
import hms.other.IDGenerator;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Manasha
 */
public class AddTestResults extends javax.swing.JPanel {

    /**
     * Creates new form AddTestResults
     */
    public AddTestResults() {
        initComponents();
        try {
            fillTestResultId();
            fillTestCombo();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }
        AutoCompleteDecorator.decorate(testCombo);
        testCombo.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        testResultIdText = new javax.swing.JTextField();
        testIdText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        patientIdText = new javax.swing.JTextField();
        admissionIdText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reportText = new javax.swing.JTextArea();
        browseButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        pathText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        testCombo = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Cuprum", 1, 34)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(36, 208, 124));
        jLabel1.setText("Add Text Results");

        jLabel3.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(57, 67, 92));
        jLabel3.setText("Test Result ID: ");

        testResultIdText.setEditable(false);
        testResultIdText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        testResultIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testResultIdTextActionPerformed(evt);
            }
        });

        testIdText.setEditable(false);
        testIdText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        testIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testIdTextActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(57, 67, 92));
        jLabel4.setText("Patient ID: ");

        jLabel5.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(57, 67, 92));
        jLabel5.setText("Test ID: ");

        patientIdText.setEditable(false);
        patientIdText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        patientIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIdTextActionPerformed(evt);
            }
        });

        admissionIdText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        admissionIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admissionIdTextActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(57, 67, 92));
        jLabel6.setText("Admission ID: ");

        jLabel7.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(57, 67, 92));
        jLabel7.setText("Report: ");

        reportText.setEditable(false);
        reportText.setColumns(20);
        reportText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        reportText.setRows(5);
        jScrollPane2.setViewportView(reportText);

        browseButton.setBackground(new java.awt.Color(36, 208, 124));
        browseButton.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        browseButton.setForeground(new java.awt.Color(255, 255, 255));
        browseButton.setText("Browse");
        browseButton.setBorder(null);
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(36, 208, 124));
        addButton.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.setBorder(null);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        pathText.setEditable(false);
        pathText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        pathText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathTextActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(57, 67, 92));
        jLabel8.setText("Path: ");

        jLabel9.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(57, 67, 92));
        jLabel9.setText("Test Name: ");

        testCombo.setEditable(true);
        testCombo.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        testCombo.setBorder(null);
        testCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                testComboItemStateChanged(evt);
            }
        });
        testCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(testResultIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel4))
                                                .addGap(14, 14, 14)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(17, 17, 17)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(testCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(testIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(patientIdText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                                    .addComponent(admissionIdText, javax.swing.GroupLayout.Alignment.LEADING))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pathText, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(browseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pathText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(browseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(testResultIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(testCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(testIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(admissionIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void testResultIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testResultIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testResultIdTextActionPerformed

    private void testIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testIdTextActionPerformed
        patientIdText.requestFocus();
    }//GEN-LAST:event_testIdTextActionPerformed

    private void patientIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIdTextActionPerformed
        admissionIdText.requestFocus();
    }//GEN-LAST:event_patientIdTextActionPerformed

    private void admissionIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admissionIdTextActionPerformed
        String admissionId = admissionIdText.getText();
        try {
            Admission admission = AdmissionController.searchAdmission(admissionId);
            if(admission != null){
                patientIdText.setText(admission.getPatientId());
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_admissionIdTextActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int showOpenDialog = fileChooser.showOpenDialog(this);
        if (showOpenDialog == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            pathText.setText(file.getAbsolutePath());
            try {
                FileReader fileReader = new FileReader(file);
                BufferedReader bufferedReader = new BufferedReader(fileReader);
                String line = "";
                try {
                    while ((line = bufferedReader.readLine()) != null) {
                        reportText.setText(reportText.getText() + line + "\n");

                    }
                } catch (IOException ex) {
                    Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_browseButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String resultId = testResultIdText.getText();
        String testId = testIdText.getText();
        String patientId = patientIdText.getText();
        String admissionId = admissionIdText.getText();
        String path = pathText.getText();

        TestResult testResult = new TestResult(resultId, testId, patientId, admissionId, path);

        try {
            boolean addResult = TestResultController.addResult(testResult);
            if (addResult) {
                JOptionPane.showMessageDialog(this, "Successfull!");
            } else {
                JOptionPane.showMessageDialog(this, "Failed!");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            fillTestResultId();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }

        testIdText.setText("");
        patientIdText.setText("");
        admissionIdText.setText("");
        pathText.setText("");
        reportText.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    private void pathTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathTextActionPerformed

    private void testComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_testComboItemStateChanged
        String testType = (String) testCombo.getSelectedItem();
        try {
            String testId = TestController.getTestId(testType);
            if (testId != null) {
                testIdText.setText(testId);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_testComboItemStateChanged

    private void testComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testComboActionPerformed
        admissionIdText.requestFocus();
    }//GEN-LAST:event_testComboActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField admissionIdText;
    private javax.swing.JButton browseButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pathText;
    private javax.swing.JTextField patientIdText;
    private javax.swing.JTextArea reportText;
    private javax.swing.JComboBox<String> testCombo;
    private javax.swing.JTextField testIdText;
    private javax.swing.JTextField testResultIdText;
    // End of variables declaration//GEN-END:variables

    private void fillTestResultId() throws SQLException, ClassNotFoundException {
        String newId = IDGenerator.getNewId("TestResult", "ResultID", "R");
        testResultIdText.setText(newId);
    }

    private void fillTestCombo() throws ClassNotFoundException, SQLException {
        ArrayList<Test> allTests = TestController.getAllTests();
        for (Test test : allTests) {
            testCombo.addItem(test.getTestName());
        }
    }
}
