/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hms.view;

import hms.controller.PatientController;
import hms.controller.TestResultController;
import hms.model.Patient;
import hms.model.TestResult;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Manasha
 */
public class ViewTestResults extends javax.swing.JPanel {

    /**
     * Creates new form ViewTestResults
     */
    public ViewTestResults() {
        initComponents();
        try {
            fillNameCombo();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ViewTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }

        AutoCompleteDecorator.decorate(nameCombo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameCombo = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        patientIdText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        testDetailTable = new org.jdesktop.swingx.JXTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        reportText = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Cuprum", 1, 34)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(36, 208, 124));
        jLabel1.setText("View Test Results");

        nameCombo.setEditable(true);
        nameCombo.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        nameCombo.setBorder(null);
        nameCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameComboItemStateChanged(evt);
            }
        });
        nameCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameComboActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(57, 67, 92));
        jLabel20.setText("Name: ");

        jLabel9.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(57, 67, 92));
        jLabel9.setText("Patient ID: ");

        patientIdText.setEditable(false);
        patientIdText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        patientIdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIdTextActionPerformed(evt);
            }
        });

        testDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Admission ID", "Test result ID", "Test name"
            }
        ));
        testDetailTable.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        testDetailTable.setGridColor(new java.awt.Color(255, 255, 255));
        testDetailTable.setRowHeight(40);
        testDetailTable.setSelectionBackground(new java.awt.Color(36, 208, 124));
        testDetailTable.setVisibleRowCount(8);
        testDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                testDetailTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(testDetailTable);

        reportText.setEditable(false);
        reportText.setColumns(20);
        reportText.setFont(new java.awt.Font("Cuprum", 0, 16)); // NOI18N
        reportText.setRows(5);
        jScrollPane2.setViewportView(reportText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(nameCombo, 0, 219, Short.MAX_VALUE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel9)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(patientIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(nameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(patientIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameComboItemStateChanged
        DefaultTableModel dtm = (DefaultTableModel) testDetailTable.getModel();

        DefaultComboBoxModel model = (DefaultComboBoxModel) nameCombo.getModel();
        if (model.getIndexOf(nameCombo.getSelectedItem()) != -1) {

            if (!nameCombo.getSelectedItem().equals("")) {
                String name = (String) nameCombo.getSelectedItem();
                String[] names = name.split(" ");

                String patientId;
                try {
                    patientId = PatientController.getPatientId(names[0], names[1]);
                    patientIdText.setText(patientId);
                    ArrayList<TestResult> resultList = TestResultController.getAllResults(patientId);
                    dtm.setRowCount(0);

                    for (TestResult testResult : resultList) {
                        Object[] rowData = {testResult.getAdmissionId(), testResult.getResultId(), testResult.getTestId()};
                        dtm.addRow(rowData);
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(PatientRecord.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                dtm.setRowCount(0);
                patientIdText.setText("");
            }
        }
    }//GEN-LAST:event_nameComboItemStateChanged

    private void nameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameComboActionPerformed

    }//GEN-LAST:event_nameComboActionPerformed

    private void patientIdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientIdTextActionPerformed

    private void testDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testDetailTableMouseClicked
        String testResultId = testDetailTable.getValueAt(testDetailTable.getSelectedRow(), 1).toString();
        try {
            String path = TestResultController.getPath(testResultId);
            try {
                FileReader fileReader = new FileReader(path);
                BufferedReader bufferedReader = new BufferedReader(fileReader);
                String line = "";
                try {
                    while ((line = bufferedReader.readLine()) != null) {
                        reportText.setText(reportText.getText() + line + "\n");

                    }
                } catch (IOException ex) {
                    Logger.getLogger(ViewTestResults.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ViewTestResults.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ViewTestResults.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_testDetailTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> nameCombo;
    private javax.swing.JTextField patientIdText;
    private javax.swing.JTextArea reportText;
    private org.jdesktop.swingx.JXTable testDetailTable;
    // End of variables declaration//GEN-END:variables

    private void fillNameCombo() throws SQLException, ClassNotFoundException {
        ArrayList<Patient> allPatients = PatientController.getAllPatients();
        nameCombo.addItem("");
        for (Patient patient : allPatients) {
            nameCombo.addItem(patient.getFirstName() + " " + patient.getLastName());
        }
    }
}
